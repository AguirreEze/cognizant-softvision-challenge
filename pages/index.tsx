import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import { getCandidateList } from "services/candidates";
import { CandidateType } from "types/candidate";
import styles from "styles/Home.module.css";
import Step from "components/step";

const Home: NextPage = () => {
  const [candidatesList, setCandidatesList] = useState<CandidateType[]>([]);
  useEffect(() => {
    const localData = localStorage.getItem("cognizant-softvision-challenge");
    localData
      ? setCandidatesList(JSON.parse(localData))
      : getCandidateList<CandidateType[]>().then(setCandidatesList);
  }, []);

  const getStepList = (step: string): CandidateType[] => {
    return candidatesList.filter(
      (candidate) => candidate.step.toLowerCase() === step.toLowerCase()
    );
  };

  const addCandidate = (candidate: CandidateType) => {
    const updatedList: CandidateType[] = [...candidatesList, candidate];
    setCandidatesList(updatedList);
    localStorage.setItem(
      "cognizant-softvision-challenge",
      JSON.stringify(updatedList)
    );
  };

  const updateCandidate = (candidate: CandidateType) => {
    const updatedList = candidatesList.map((e) => {
      return e.id === candidate.id ? candidate : e;
    });
    setCandidatesList(updatedList);
    localStorage.setItem(
      "cognizant-softvision-challenge",
      JSON.stringify(updatedList)
    );
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <img alt="Softvision" src="logo.png" width={320} />
        <h1 className={styles.title}>Lets get this party started</h1>
        <section className={styles.grid}>
          <Step
            name={"Entrevista Inicial"}
            list={getStepList("Entrevista Inicial")}
            updateCandidate={updateCandidate}
            initial={true}
            addCandidate={addCandidate}
          />
          <Step
            name={"Entrevista Técnica"}
            list={getStepList("Entrevista Técnica")}
            updateCandidate={updateCandidate}
          />
          <Step
            name={"Oferta"}
            list={getStepList("Oferta")}
            updateCandidate={updateCandidate}
          />
          <Step
            name={"Asignación"}
            list={getStepList("Asignación")}
            updateCandidate={updateCandidate}
          />
          <Step
            name={"Rechazo"}
            list={getStepList("Rechazo")}
            updateCandidate={updateCandidate}
          />
        </section>
      </main>
    </div>
  );
};

export default Home;
